openapi: 3.1.0
info:
  title: Category Api
  description: Category Api
  version: 1.0.0
servers:
  - url: "http://localhost:3333"
paths:
  /categories:
    get:
      operationId: getCategories
      tags:
        - categories
      responses:
        200:
          $ref: "#/components/responses/GetAllCategories"
    post:
      operationId: createCategories
      tags:
        - categories
      requestBody:
        $ref: "#/components/requestBodies/PostCategory"
      responses:
        200:
          $ref: "#/components/responses/PostCategory"

  /categories/{categoryId}:
    patch:
      operationId: updateCategory
      tags:
        - categories
      parameters:
        - $ref: "#/components/parameters/CategoryId"
      responses:
        200:
          $ref: "#/components/responses/PatchCategory"
      requestBody:
        $ref: "#/components/requestBodies/PatchCategory"

    get:
      operationId: getCategory
      tags:
        - categories
      parameters:
        - $ref: "#/components/parameters/CategoryId"
      responses:
        200:
          $ref: "#/components/responses/GetByIdCategory"

components:
  requestBodies:
    PatchCategory:
      description: Редактирование категории
      content:
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/CategoryDto"
              - type: object
                properties:
                  images:
                    type: array
                    items:
                      type: string
                      format: binary
                required:
                  - images

    PostCategory:
      description: Создание категории
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryCreate"

  responses:
    PostCategory:
      description: Созданная категория
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryPreview"

    GetAllCategories:
      description: Получение всех категорий
      content:
        application/json:
          schema:
            type: object
            properties:
              rows:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryPreview"
              count:
                type: number
            required:
              - rows
              - count

    GetByIdCategory:
      description: Получение категории по id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryDto"

    PatchCategory:
      description: Изменение категории
      content:
        application/json:
          schema:
            type: array
            items:
              type: number

  parameters:
    CategoryId:
      in: path
      name: categoryId
      required: true
      schema:
        type: number

  schemas:
    CategoryPreview:
      type: object
      properties:
        id:
          type: number
        description:
          type: string
        caption:
          type: string
        order:
          oneOf:
            - type: number
            - type: "null"
        altNames:
          type: array
          items:
            $ref: "./alt-name.yaml#/components/schemas/AltName"
        media:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Media"
      required:
        - id
        - description
        - caption
        - order
        - altNames
        - media

    CategoryFields:
      type: object
      properties:
        caption:
          type: string
        description:
          oneOf:
            - type: string
            - type: "null"
        isShowPhotoWithGoods:
          type: boolean
        bgColor:
          type: string
        color:
          type: string
        blur:
          type: number
      required:
        - caption
        - description
        - isShowPhotoWithGoods
        - bgColor
        - color
        - blur

    CategoryRows:
      type: object
      properties:
        activeImageId:
          oneOf:
            - type: string
            - type: "null"
        captionPosition:
          $ref: "#/components/schemas/CaptionPosition"
        media:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Media"
        altNames:
          type: array
          items:
            $ref: "./alt-name.yaml#/components/schemas/AltNameCreate"
        characteristics:
          type: array
          items:
            $ref: "./characteristic.yaml#/components/schemas/CharacteristicCreate"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagCreate"
        images:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Image"
      required:
        - activeImageId
        - captionPosition
        - media
        - altNames
        - characteristics
        - tags
        - images

    CategoryBase:
      type: object
      properties:
        caption:
          type: string
        description:
          type: string
        isShowPhotoWithGoods:
          type: boolean
        bgColor:
          type: string
        color:
          type: string
        blur:
          type: number
        activeImageId:
          oneOf:
            - type: string
            - type: "null"
        captionPosition:
          $ref: "#/components/schemas/CaptionPosition"
        media:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Media"
      required:
        - caption
        - description
        - isShowPhotoWithGoods
        - bgColor
        - color
        - blur
        - activeImageId
        - captionPosition
        - media

    CategoryDto:
      type: object
      properties:
        id:
          type: number
        order:
          oneOf:
            - type: number
            - type: "null"
        caption:
          type: string
        description:
          type: string
        isShowPhotoWithGoods:
          type: boolean
        bgColor:
          type: string
        color:
          type: string
        blur:
          type: number
        activeImageId:
          oneOf:
            - type: string
            - type: "null"
        captionPosition:
          $ref: "#/components/schemas/CaptionPosition"
        media:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Media"
        altNames:
          type: array
          items:
            $ref: "./alt-name.yaml#/components/schemas/AltName"
        characteristics:
          type: array
          items:
            $ref: "./characteristic.yaml#/components/schemas/Characteristic"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
      required:
        - caption
        - description
        - isShowPhotoWithGoods
        - bgColor
        - color
        - blur
        - activeImageId
        - captionPosition
        - media
        - id
        - order
        - altNames
        - characteristics
        - tags

    CategoryCreate:
      type: object
      properties:
        caption:
          type: string
        description:
          oneOf:
            - type: string
            - type: "null"
        isShowPhotoWithGoods:
          type: boolean
        bgColor:
          type: string
        color:
          type: string
        blur:
          type: number
        activeImageId:
          oneOf:
            - type: string
            - type: "null"
        captionPosition:
          $ref: "#/components/schemas/CaptionPosition"
        media:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Media"
        altNames:
          type: array
          items:
            $ref: "./alt-name.yaml#/components/schemas/AltNameCreate"
        characteristics:
          type: array
          items:
            $ref: "./characteristic.yaml#/components/schemas/CharacteristicCreate"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagCreate"
        images:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Image"
      required:
        - caption
        - description
        - isShowPhotoWithGoods
        - bgColor
        - color
        - blur
        - activeImageId
        - captionPosition
        - media
        - altNames
        - characteristics
        - tags
        - images

    CategoryCreateWithMedia:
      type: object
      properties:
        caption:
          type: string
        description:
          oneOf:
            - type: string
            - type: "null"
        isShowPhotoWithGoods:
          type: boolean
        bgColor:
          type: string
        color:
          type: string
        blur:
          type: number
        activeImageId:
          oneOf:
            - type: string
            - type: "null"
        captionPosition:
          $ref: "#/components/schemas/CaptionPosition"
        media:
          type: array
          items:
            $ref: "./media.yaml#/components/schemas/Media"
        altNames:
          type: array
          items:
            $ref: "./alt-name.yaml#/components/schemas/AltNameCreate"
        characteristics:
          type: array
          items:
            $ref: "./characteristic.yaml#/components/schemas/CharacteristicCreate"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagCreate"
      required:
        - caption
        - description
        - isShowPhotoWithGoods
        - bgColor
        - color
        - blur
        - activeImageId
        - captionPosition
        - media
        - altNames
        - characteristics
        - tags

    CaptionPosition:
      type: string
      enum:
        - "top-left"
        - "top-center"
        - "top-right"
        - "center-left"
        - "center-center"
        - "center-right"
        - "bottom-left"
        - "bottom-center"
        - "bottom-right"

    CategoryUpdateDto:
      allOf:
        - $ref: "#/components/schemas/CategoryBase"
        - type: object
          properties:
            altNames:
              type: array
              items:
                $ref: "./alt-name.yaml#/components/schemas/AltNameCreate"
            characteristics:
              type: array
              items:
                $ref: "./characteristic.yaml#/components/schemas/CharacteristicCreate"
            tags:
              type: array
              items:
                $ref: "#/components/schemas/TagCreate"
            images:
              type: array
              items:
                $ref: "./media.yaml#/components/schemas/Image"
          required:
            - images
            - altNames
            - characteristics
            - tags

    TagBase:
      type: object
      properties:
        icon:
          oneOf:
            - type: string
            - type: "null"
        caption:
          type: string
        color:
          type: string
      required:
        - icon
        - caption
        - color

    Tag:
      allOf:
        - $ref: "#/components/schemas/TagBase"
        - type: object
          properties:
            id:
              type: number
          required:
            - id

    TagCreate:
      allOf:
        - $ref: "#/components/schemas/TagBase"
        - type: object
          properties:
            action:
              type: string
              enum:
                - create
                - update
                - remove
            id:
              oneOf:
                - type: number
                - type: string
          required:
            - id
